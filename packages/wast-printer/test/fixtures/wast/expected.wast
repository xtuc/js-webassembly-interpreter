(module 
  (import "module" "name" (func $name (param i32) (result i32)))
  (import "m" "a" (global (mut i32)))
  (import "m" "a" (global i32))
  (global $test i32 (i32.const 0))
  (global $global_1 i32 (i32.const 1_1___4))
  (global $global_2 (mut i32) (i32.const 1))
  (memory $memory_0 1)
  (memory $memory_1 1 0)
  (memory $foo 1 0)
  (type (func))
  (type $t (func))
  (type (func (param i32)))
  (type (func (param $x i32)))
  (type (func (result i32)))
  (type (func (param i32) (result i32)))
  (type (func (param $x i32) (result i32)))
  (type (func (param f32) (param f64)))
  (func $add (param $lhs i32) (param $rhs i32) (result i32)
    (local i32)
    (local i64)
    (local f32)
    (local f64)
    (local $a i32)
    (local $b f32)
    (get_local $lhs)
    (get_local $rhs)
    (i32.add)
    (return (i32.const 1))
    (return)
    (block $block_0)
    (block $foo)
    (block $test)
    (block $block_3
      (nop)
    )
    (call $a)
    (call 1)
    (loop $loop_0)
    (loop $l)
    (loop $loop_2
      (nop)
    )
    (loop $loop_3 (result i32)
      (nop)
      (nop)
    )
    (if $if_0 (get_local 0)
      (then)
      (else)
    )
    (if $if_1 (get_local 0)
      (then)
      (else)
    )
    (if $l (get_local 0)
      (then)
      (else)
    )
    (if $l (get_local 0)
      (then)
      (else)
    )
    (if $if_4 (get_local 0)
      (then
        (nop)
      )
      (else
        (nop)
      )
    )
    (if $if_5 (result i32) (get_local 0)
      (then
        (i32.const 7)
      )
      (else
        (i32.const 8)
      )
    )
    (i64.const -1)
    (i64.const 1)
    (i64.const 0xFF)
    (f32.const 0x1.b7p-1)
    (f32.const inf)
    (f32.const -inf)
  )
  ;; a

  (; b ;)

  (export "add" (func $add))
  (table $a 10 anyfunc)
  (table $b 0 10 anyfunc)
  (table $table_2 10 anyfunc)
  (table $table_3 0 10 anyfunc)
  (table $table_4 0 anyfunc)
  (table $a 10 anyfunc)
  (func $func_1)
  (func $test)
  (start $test)
  (start 0)
  (import "a" "b" (table $table_6 1 anyfunc))
  (import "c" "d" (table $table_7 5 25 anyfunc))
)
